// This file was generated by SquareLine Studio
// SquareLine Studio version: SquareLine Studio 1.3.4
// LVGL version: 8.3.6
// Project name: demo5

#include <Arduino.h>
#include "ui.h"
#include "stdio.h"
#include "focusrail.hpp"
#include "wifi.hpp"
//#include "motor.hpp"
//#include "camera.hpp"

//Variable Mycamera global
extern FocusRail Myfr;

void movDistChange(lv_event_t * e)
{
	//Leo el valor del dropDownMovDist
	int indice = lv_dropdown_get_selected(lv_event_get_current_target(e));
	//La almacenamos en la variable global movDistance
	Myfr.setMovDistance(indice);
}

void movBackward(lv_event_t * e)
{
	//Movemos el motor hacia atr√°s
	Myfr.moveMotor(BACKWARD);
}

void movForward(lv_event_t * e)
{
	//Movemos el motor hacia adelante
	Myfr.moveMotor(FORWARD);
}

void setCamType(lv_event_t * e)
{
	//Ponemos camType en funcion del dropdown
	int camType = lv_dropdown_get_selected(lv_event_get_current_target(e));
	Myfr.setCamera(camType);
	// Si la camara es Canon, mostramos el container canonTimeContainer, si no lo ocultamos
	if(camType == CANON)
	{
		lv_obj_clear_flag(ui_canonTimeContainer, LV_OBJ_FLAG_HIDDEN);
	}
	else
	{
		lv_obj_add_flag(ui_canonTimeContainer, LV_OBJ_FLAG_HIDDEN);
	}
}

void setCamInterface(lv_event_t * e)
{
	// Ponemos camInterface en funcion del dropdown
	int camInterface = lv_dropdown_get_selected(lv_event_get_current_target(e));
	Myfr.setCameraInterface(camInterface);
}

void setCapProf(lv_event_t * e)
{
	// Ponemos capProf en funcion del slider
	int capProf = lv_slider_get_value(lv_event_get_current_target(e));
	Myfr.setCapProf(capProf);
}

void setCapFotos(lv_event_t * e)
{
	// Ponemos capFotos en funcion del slider
	int capFotos = lv_slider_get_value(lv_event_get_current_target(e));
	Myfr.setCapFotos(capFotos);
}

void setCapTime(lv_event_t * e)
{
	// Ponemos capTime en funcion del slider
	int capTime = lv_slider_get_value(lv_event_get_current_target(e));
	Myfr.setCapTime(capTime);
}

void startCapture(lv_event_t * e)
{
	// Iniciamos la captura de fotos
	Myfr.capturePhotos();	
}

void doOtaUpdate(lv_event_t * e)
{
	// Your code here
}

void setCanonTime(lv_event_t * e)
{
	// Your code here
}

void getWifiNetwork(lv_event_t * e)
{
	// Your code here
}

void initWifiScreen(lv_event_t * e)
{
	//Leemos los SSID de las redes wifi disponibles y los metemos en ssidDropdown
	Wifi Mywifi;
	WiFiClass networks = Mywifi.getNetworks();
	for (int i = 0; i < networks.scanComplete(); ++i)
	{
		lv_dropdown_add_option(ui_ssidDropdown, networks.SSID(i).c_str(), 0);
	}
}